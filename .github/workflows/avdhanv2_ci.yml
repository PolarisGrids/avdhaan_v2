name: Deploy to Private OKE Cluster

on:
  push:
    branches:
      - main
      
jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      OCI_CLI_USER: ${{ secrets.OCI_CLI_USER }}
      OCI_CLI_TENANCY: ${{ secrets.OCI_CLI_TENANCY }}
      OCI_CLI_FINGERPRINT: ${{ secrets.OCI_CLI_FINGERPRINT }}
      OCI_CLI_KEY_CONTENT: ${{ secrets.OCI_CLI_KEY_CONTENT }}
      OCI_CLI_REGION: ${{ secrets.OCI_CLI_REGION }}
      OCI_SECRET_OCID: ${{ secrets.OCI_SECRET_OCID }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Set up OCI CLI
      run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
          pip3 install oci-cli

    - name: Validate OCI CLI installation
      run: |
          oci --version

    - name: Check OCI CLI configuration
      run: |
          mkdir -p ~/.oci
          echo "[DEFAULT]" > ~/.oci/config
          echo "user=${{ secrets.OCI_CLI_USER }}" >> ~/.oci/config
          echo "fingerprint=${{ secrets.OCI_CLI_FINGERPRINT }}" >> ~/.oci/config
          echo "tenancy=${{ secrets.OCI_CLI_TENANCY }}" >> ~/.oci/config
          echo "region=${{ secrets.OCI_CLI_REGION }}" >> ~/.oci/config
          echo "key_file=~/.oci/oci_api_key.pem" >> ~/.oci/config
          echo "${{ secrets.OCI_CLI_KEY_CONTENT }}" > ~/.oci/oci_api_key.pem
          chmod 600 ~/.oci/oci_api_key.pem
          cat ~/.oci/config
      shell: bash
    - name: Retrieve secrets from OCI Vault
      run: |
         # oci secrets secret-bundle get --secret-id ocid1.vaultsecret.oc1.ap-mumbai-1.amaaaaaavdzcjeaamcmdaupa5exidvnknql3z2vasnfedunhiqhpg7c3hkea --query 'data."secret-bundenvcontent".content' --raw-output | base64 --decode >> .env
          oci secrets secret-bundle get --secret-id ocid1.vaultsecret.oc1.ap-mumbai-1.amaaaaaavdzcjeaashhn66in6pf4e6txe6zg64zivm74ux47skma4fujzrsa  --query 'data."secret-bundle-content".content'   --raw-output | base64 --decode >> env.json
          # oci kms management vault create --compartment-id ocid1.tenancy.oc1..aaaaaaaav2wedenwgecynbmhgejfzcsebevogncfkgfbg4t6xdettpwolunq --display-name "Mytest2"  --vault-type DEFAULT
          # SECRET=$(oci secrets secret-bundle get --secret-id ocid1.vault.oc1.ap-mumbai-1.fbtlbf7raaap4.abrg6ljrrpmvglvcwvlanymdcckp4vk6mzkz3h6xestsqzq5xpsrgplnsn5a --query 'data."secret-bundle-content".content' --raw-output --debug | base64 --decode)
          # echo "${SECRET}" > .envs
          jq -r 'to_entries | .[] | "\(.key)=\(.value|tostring)"' env.json > .env
          cat .env
          ls -a
    - name: Login to Oracle Cloud Infrastructure Registry (OCIR)
      run: |
        echo "${{ secrets.OCI_AUTH_TOKEN }}" | docker login -u "${{ secrets.OCI_NAMESPACE }}/${{ secrets.OCI_USER_MAIL }}" ${{ secrets.OCI_REGION }}.ocir.io --password-stdin     
    - name: Build Docker image
      run: |
          echo Building the Docker image...
          docker build -t ${{ secrets.OCI_REGION }}.ocir.io/${{ secrets.OCI_NAMESPACE }}/${{ secrets.NAME_REPO }}:latest .
          docker tag ${{ secrets.OCI_REGION }}.ocir.io/${{ secrets.OCI_NAMESPACE }}/${{ secrets.NAME_REPO }}:latest ${{ secrets.OCI_REGION }}.ocir.io/${{ secrets.OCI_NAMESPACE }}/${{ secrets.NAME_REPO }}:latest
      # uses: docker/build-push-action@v6
      # with:
      #   platforms: linux/arm64
      #   # context: app
      #   file: Dockerfile
      #   tags: ${{ secrets.OCI_REGION }}.ocir.io/${{ secrets.OCI_NAMESPACE }}/${{ secrets.NAME_REPO }}/command-execution-service:latest
      #   push: false
      #   load: true
      #   # cache-from: type=gha
      #   # cache-to: type=gha,mode=max   
        
    - name: Push Docker Image to Oracle Cloud Registry
      run: |
        docker push ${{ secrets.OCI_REGION }}.ocir.io/${{ secrets.OCI_NAMESPACE }}/${{ secrets.NAME_REPO }}:latest 
